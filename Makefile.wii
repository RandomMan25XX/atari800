#---------------------------------------------------------------------------------
# Clear the implicit built in rules
#---------------------------------------------------------------------------------
.SUFFIXES:
#---------------------------------------------------------------------------------
ifeq ($(strip $(DEVKITPPC)),)
$(error "Please set DEVKITPPC in your environment. export DEVKITPPC=<path to>devkitPPC")
endif

include $(DEVKITPPC)/wii_rules

#---------------------------------------------------------------------------------
# TARGET is the name of the output
# BUILD is the directory where object files & intermediate files will be placed
# SOURCES is a list of directories containing source code
# INCLUDES is a list of directories containing extra header files
#---------------------------------------------------------------------------------
TARGET		:=	$(notdir $(CURDIR))
BUILD		:=	build
#DATA		:=	data
INCLUDES	:=

#	src/rdevice.c \

GRAPHICS =

SOURCES = \
	src/af80.c \
	src/afile.c \
	src/antic.c \
	src/artifact.c \
	src/atari.c \
	src/binload.c \
	src/bit3.c \
	src/cartridge.c \
	src/cartridge_info.c \
	src/cassette.c \
	src/compfile.c \
	src/cfg.c \
	src/colours.c \
	src/colours_external.c \
	src/colours_ntsc.c \
	src/colours_pal.c \
	src/cpu.c \
	src/crc32.c \
	src/cycle_map.c \
	src/devices.c \
	src/esc.c \
	src/atari_ntsc/atari_ntsc.c \
	src/filter_ntsc.c \
	src/gtia.c \
	src/ide.c \
	src/img_tape.c \
	src/input.c \
	src/log.c \
	src/memory.c \
	src/monitor.c \
	src/mzpokeysnd.c \
	src/pal_blending.c \
	src/pbi.c \
	src/pbi_bb.c \
	src/pbi_mio.c \
	src/pbi_proto80.c \
	src/pbi_scsi.c \
	src/pbi_xld.c \
	src/pia.c \
	src/pokey.c \
	src/pokeysnd.c \
	src/remez.c \
	src/rtime.c \
	src/screen.c \
	src/sio.c \
	src/sndsave.c \
	src/sound.c \
	src/statesav.c \
	src/sysrom.c \
	src/ui.c \
	src/ui_basic.c \
	src/util.c \
	src/videomode.c \
	src/voicebox.c \
	src/votrax.c \
	src/votraxsnd.c \
	src/xep80.c \
	src/xep80_fonts.c \
	src/roms/altirra_5200_os.c \
	src/roms/altirra_basic.c \
	src/roms/altirraos_800.c \
	src/roms/altirraos_xl.c \
	src/sdl/init.c \
	src/sdl/input.c \
	src/sdl/main.c \
	src/sdl/palette.c \
	src/sdl/sound.c \
	src/sdl/video.c \
	src/sdl/video_sw.c

#---------------------------------------------------------------------------------
# options for code generation
#---------------------------------------------------------------------------------

CFLAGS	= -g -O2 -Wall -D_WII $(MACHDEP) $(INCLUDE)
CXXFLAGS	=	$(CFLAGS)

LDFLAGS	=	-g $(MACHDEP) -Wl,-Map,$(notdir $@).map

#---------------------------------------------------------------------------------
# any extra libraries we wish to link with the project
#---------------------------------------------------------------------------------
LIBS	:=	-lSDLmain -lSDL -lpng -lz -lwiiuse -lwiikeyboard -lbte -lfat -laesnd -logc -lm

#---------------------------------------------------------------------------------
# list of directories containing libraries, this must be the top level containing
# include and lib
#---------------------------------------------------------------------------------
LIBDIRS	:=	\
	$(DEVKITPRO)/portlibs/wii \
	$(DEVKITPRO)/portlibs/ppc

#---------------------------------------------------------------------------------
# no real need to edit anything past this point unless you need to add additional
# rules for different file extensions
#---------------------------------------------------------------------------------
ifneq ($(BUILD),$(notdir $(CURDIR)))
#---------------------------------------------------------------------------------

export OUTPUT	:=	$(CURDIR)/$(TARGET)

export VPATH	:=	$(CURDIR)

export DEPSDIR	:=	

#---------------------------------------------------------------------------------
# automatically build a list of object files for our project
#---------------------------------------------------------------------------------
CFILES		:=	$(foreach dir,$(SOURCES),$(CURDIR)/$(dir))
BINFILES	:=	$(foreach dir,$(DATA),$(notdir $(wildcard $(dir)/*.*)))

#---------------------------------------------------------------------------------
# use CXX for linking C++ projects, CC for standard C
#---------------------------------------------------------------------------------
ifeq ($(strip $(CPPFILES)),)
	export LD	:=	$(CC)
else
	export LD	:=	$(CXX)
endif

export OFILES_BIN	:=	$(addsuffix .o,$(BINFILES))
export OFILES_SOURCES := $(CPPFILES:.cpp=.o) $(CFILES:.c=.o) $(sFILES:.s=.o) $(SFILES:.S=.o)
export OFILES := $(OFILES_BIN) $(OFILES_SOURCES)

export HFILES := $(addsuffix .h,$(subst .,_,$(BINFILES)))

#---------------------------------------------------------------------------------
# build a list of include paths
#---------------------------------------------------------------------------------
export INCLUDE	:=	$(foreach dir,$(INCLUDES), -iquote $(CURDIR)/$(dir)) \
					$(foreach dir,$(LIBDIRS),-I$(dir)/include) \
					-I$(CURDIR)/$(BUILD) \
					-I$(LIBOGC_INC) \
					-I$(DEVKITPRO)/portlibs/wii/include/SDL \
					-I$(CURDIR)/src -I$(CURDIR)/src/wii

#---------------------------------------------------------------------------------
# build a list of library paths
#---------------------------------------------------------------------------------
export LIBPATHS	:= -L$(LIBOGC_LIB) $(foreach dir,$(LIBDIRS),-L$(dir)/lib)

export OUTPUT	:=	$(CURDIR)/$(TARGET)
.PHONY: $(BUILD) clean

#---------------------------------------------------------------------------------
$(BUILD):
	@[ -d $@ ] || mkdir -p $@
	@$(MAKE) --no-print-directory -C $(BUILD) -f $(CURDIR)/Makefile.wii

#---------------------------------------------------------------------------------
clean:
	@echo clean ...
	@rm -fr $(BUILD) $(OUTPUT).elf $(OUTPUT).dol

#---------------------------------------------------------------------------------
run:
	wiiload $(TARGET).dol


#---------------------------------------------------------------------------------
else

DEPENDS	:=	$(OFILES:.o=.d)

#---------------------------------------------------------------------------------
# main targets
#---------------------------------------------------------------------------------
$(OUTPUT).dol: $(OUTPUT).elf
$(OUTPUT).elf: $(OFILES)

$(OFILES_SOURCES) : $(HFILES)

#---------------------------------------------------------------------------------
# This rule links in binary data with the .jpg extension
#---------------------------------------------------------------------------------
%.jpg.o	%_jpg.h :	%.jpg
#---------------------------------------------------------------------------------
	@echo $(notdir $<)
	$(bin2o)

-include $(DEPENDS)

#---------------------------------------------------------------------------------
endif
#---------------------------------------------------------------------------------
